/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sleuthkit.autopsy.keywordsearch;

import java.util.logging.Level;
import java.util.logging.Logger;
import org.sleuthkit.autopsy.corecomponents.OptionsPanel;

final class KeywordSearchConfigurationPanel extends javax.swing.JPanel implements OptionsPanel {

    //private final KeywordSearchOptionsPanelController controller;
    //private static KeywordSearchConfigurationPanel instance = null;
    private static final Logger logger = Logger.getLogger(KeywordSearchConfigurationPanel.class.getName());
    private KeywordSearchConfigurationPanel1 listsPanel;
    private KeywordSearchConfigurationPanel3 languagesPanel;
    private KeywordSearchConfigurationPanel2 generalPanel;

    KeywordSearchConfigurationPanel() {//KeywordSearchOptionsPanelController controller) {
        //this.controller = controller;
        initComponents();
        customizeComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }
    
    /*public static KeywordSearchConfigurationPanel getDefault() {
        if(instance == null) {
            instance = new KeywordSearchConfigurationPanel();
        }
        return instance;
    }*/
    
    private void customizeComponents() {
        setName("Advanced Keyword Search Configuration");
        listsPanel = new KeywordSearchConfigurationPanel1();
        languagesPanel = new KeywordSearchConfigurationPanel3();
        generalPanel = new KeywordSearchConfigurationPanel2();
        tabbedPane.insertTab("Lists", null, listsPanel, "List configuration", 0);
        tabbedPane.insertTab("String Extraction", null, languagesPanel, "String extraction configuration for Keyword Search Ingest", 1);
        tabbedPane.insertTab("General", null, generalPanel, "General configuration", 2);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void load() {
        // Deselect all table rows
        listsPanel.load();
        languagesPanel.load();
        generalPanel.load();
        // Reload the XML to avoid 'ghost' vars
        KeywordSearchListsXML.getCurrent().reload();
    }

    public void store() {
        listsPanel.store();
        languagesPanel.store();
        generalPanel.store();
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
}
